
DECLARE Calculator NAMESPACE 'http://www.mrmnames.net';
CREATE COMPUTE MODULE Calculator_Using_SoapNodes_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		IF InputRoot.SOAP.Body.Calculator:Add.Calculator:Testing =  'Add' THEN
		DECLARE A INTEGER  InputRoot.SOAP.Body.Calculator:Add.Calculator:A;
		DECLARE  B INTEGER  InputRoot.SOAP.Body.Calculator:Add.Calculator:B;
		
		DECLARE c INTEGER;
		
		SET  c = A+B;
		
		SET  OutputRoot.XMLNSC.Calculator.Add = c;
		END IF;
		
		IF InputRoot.SOAP.Body.Calculator:Multi.Calculator:Testing = 'Multi' THEN
			DECLARE A INTEGER InputRoot.SOAP.Body.Calculator:Multi.Calculator:A;
			DECLARE B INTEGER InputRoot.SOAP.Body.Calculator:Multi.Calculator:B;
			
			DECLARE c INTEGER;
			
			SET c =  A*B;
			
			SET OutputRoot.XMLNSC.Calculator.Multi = c;
		END IF;
		
		IF InputRoot.SOAP.Body.Calculator:Sub.Calculator:Testing = 'Sub' THEN
			DECLARE A INTEGER InputRoot.SOAP.Body.Calculator:Sub.Calculator:A;
			DECLARE B INTEGER InputRoot.SOAP.Body.Calculator:Sub.Calculator:B;
			
			DECLARE c INTEGER;
			
			SET c =  A-B;
			
			SET OutputRoot.XMLNSC.Calculator.Multi = c;
		END IF;
		
		IF InputRoot.SOAP.Body.Calculator:Division.Calculator:Testing = 'Division' THEN
			DECLARE A INTEGER InputRoot.SOAP.Body.Calculator:Division.Calculator:A;
			DECLARE B INTEGER InputRoot.SOAP.Body.Calculator:Division.Calculator:B;
			
			DECLARE c INTEGER;
			
			SET c =  A/B;
			
			SET OutputRoot.XMLNSC.Calculator.Division = c;
		END IF;
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
